{"ast":null,"code":"import _slicedToArray from \"/Users/bonnieyan/Desktop/Full_stack/part5-ultimateHook/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/bonnieyan/Desktop/Full_stack/part5-ultimateHook/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useField = type => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  const onChange = event => {\n    setValue(event.target.value);\n  };\n\n  return {\n    type,\n    value,\n    onChange\n  };\n};\n\nconst useResource = baseUrl => {\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        resources = _useState4[0],\n        setResources = _useState4[1]; // ...\n\n\n  const create = resource => {// ...\n  };\n\n  const service = {\n    create\n  };\n  return [resources, service];\n};\n\nconst App = () => {\n  const content = useField('text');\n  const name = useField('text');\n  const number = useField('text');\n\n  const _useResource = useResource('http://localhost:3005/notes'),\n        _useResource2 = _slicedToArray(_useResource, 2),\n        notes = _useResource2[0],\n        noteService = _useResource2[1];\n\n  const _useResource3 = useResource('http://localhost:3005/persons'),\n        _useResource4 = _slicedToArray(_useResource3, 2),\n        persons = _useResource4[0],\n        personService = _useResource4[1];\n\n  const handleNoteSubmit = event => {\n    event.preventDefault();\n    noteService.create({\n      content: content.value\n    });\n  };\n\n  const handlePersonSubmit = event => {\n    event.preventDefault();\n    personService.create({\n      name: name.value,\n      number: number.value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"notes\"), React.createElement(\"form\", {\n    onSubmit: handleNoteSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({}, content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"create\")), notes.map(n => React.createElement(\"p\", {\n    key: n.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, n.content)), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"persons\"), React.createElement(\"form\", {\n    onSubmit: handlePersonSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"name \", React.createElement(\"input\", Object.assign({}, name, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), \"number \", React.createElement(\"input\", Object.assign({}, number, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"create\")), persons.map(n => React.createElement(\"p\", {\n    key: n.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, n.name, \" \", n.number)));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/bonnieyan/Desktop/Full_stack/part5-ultimateHook/src/App.js"],"names":["React","useState","useEffect","axios","useField","type","value","setValue","onChange","event","target","useResource","baseUrl","resources","setResources","create","resource","service","App","content","name","number","notes","noteService","persons","personService","handleNoteSubmit","preventDefault","handlePersonSubmit","map","n","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n\nconst useField = (type) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  return {\n    type,\n    value,\n    onChange\n  }\n}\n\nconst useResource = (baseUrl) => {\n  const [resources, setResources] = useState([])\n\n  // ...\n\n  const create = (resource) => {\n    // ...\n  }\n\n  const service = {\n    create\n  }\n\n  return [\n    resources, service\n  ]\n}\n\nconst App = () => {\n  const content = useField('text')\n  const name = useField('text')\n  const number = useField('text')\n\n  const [notes, noteService] = useResource('http://localhost:3005/notes')\n  const [persons, personService] = useResource('http://localhost:3005/persons')\n\n  const handleNoteSubmit = (event) => {\n    event.preventDefault()\n    noteService.create({ content: content.value })\n  }\n \n  const handlePersonSubmit = (event) => {\n    event.preventDefault()\n    personService.create({ name: name.value, number: number.value})\n  }\n\n  return (\n    <div>\n      <h2>notes</h2>\n      <form onSubmit={handleNoteSubmit}>\n        <input {...content} />\n        <button>create</button>\n      </form>\n      {notes.map(n => <p key={n.id}>{n.content}</p>)}\n\n      <h2>persons</h2>\n      <form onSubmit={handlePersonSubmit}>\n        name <input {...name} /> <br/>\n        number <input {...number} />\n        <button>create</button>\n      </form>\n      {persons.map(n => <p key={n.id}>{n.name} {n.number}</p>)}\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}