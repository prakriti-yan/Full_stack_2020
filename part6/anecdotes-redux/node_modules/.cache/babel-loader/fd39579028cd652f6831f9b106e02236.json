{"ast":null,"code":"var _jsxFileName = \"/Users/bonnieyan/Desktop/Full_stack_2020/part6/anecdotes-redux/src/components/AnecdoteList.js\";\nimport React from 'react';\nimport { vote } from '../reducers/anecdoteReducer';\nimport { setMessage } from '../reducers/notificationReducer';\nimport { connect } from 'react-redux'; // import Filter from './Filter'\n\nconst AnecdoteList = props => {\n  console.log(props.anecdotes);\n  const filtered = props.anecdotes.filter(a => a.content.includes(props.filter));\n\n  const addVote = (id, content) => {\n    props.vote(id);\n    props.setMessage(\"You voted '\".concat(content, \"'\"));\n    setTimeout(() => props.setMessage(''), 5000);\n  };\n\n  return React.createElement(React.Fragment, null, filtered.map(anecdote => React.createElement(\"div\", {\n    key: anecdote.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, anecdote.content), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"has \", anecdote.votes, \" vote\", React.createElement(\"button\", {\n    onClick: () => addVote(anecdote.id, anecdote.content),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"vote\")))));\n}; // const filterAnec = ({ anecdotes, filter }) => {\n//   return anecdotes.filter(a=> a.content.toUpperCase().includes(filter.toUpperCase()))\n// }\n\n\nconst mapStateToProps = state => {\n  return {\n    filter: state.filter,\n    anecdotes: state.anecdotes // filteredAnecdotes: filterAnec(state)\n\n  };\n};\n\nconst mapDispatchToProps = {\n  setMessage,\n  vote\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AnecdoteList);","map":{"version":3,"sources":["/Users/bonnieyan/Desktop/Full_stack_2020/part6/anecdotes-redux/src/components/AnecdoteList.js"],"names":["React","vote","setMessage","connect","AnecdoteList","props","console","log","anecdotes","filtered","filter","a","content","includes","addVote","id","setTimeout","map","anecdote","votes","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,6BAArB;AACA,SAASC,UAAT,QAA2B,iCAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,SAAlB;AACA,QAAMC,QAAQ,GACdJ,KAAK,CAACG,SAAN,CAAgBE,MAAhB,CAAuBC,CAAC,IAAIA,CAAC,CAACC,OAAF,CAAUC,QAAV,CAAmBR,KAAK,CAACK,MAAzB,CAA5B,CADA;;AAGA,QAAMI,OAAO,GAAG,CAACC,EAAD,EAAKH,OAAL,KAAiB;AAC7BP,IAAAA,KAAK,CAACJ,IAAN,CAAWc,EAAX;AACAV,IAAAA,KAAK,CAACH,UAAN,sBAA+BU,OAA/B;AACAI,IAAAA,UAAU,CAAE,MAAKX,KAAK,CAACH,UAAN,CAAiB,EAAjB,CAAP,EAA6B,IAA7B,CAAV;AACD,GAJH;;AAKE,SACE,0CACCO,QAAQ,CAACQ,GAAT,CAAaC,QAAQ,IACpB;AAAK,IAAA,GAAG,EAAEA,QAAQ,CAACH,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,QAAQ,CAACN,OADZ,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACOM,QAAQ,CAACC,KADhB,WAEE;AAAQ,IAAA,OAAO,EAAE,MAAML,OAAO,CAACI,QAAQ,CAACH,EAAV,EAAcG,QAAQ,CAACN,OAAvB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CAJF,CADD,CADD,CADF;AAeD,CAzBH,C,CA2BA;AACA;AACA;;;AAEA,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLX,IAAAA,MAAM,EAAEW,KAAK,CAACX,MADT;AAELF,IAAAA,SAAS,EAAEa,KAAK,CAACb,SAFZ,CAGL;;AAHK,GAAP;AAKD,CAND;;AAQA,MAAMc,kBAAkB,GAAG;AACzBpB,EAAAA,UADyB;AAEzBD,EAAAA;AAFyB,CAA3B;AAIA,eAAeE,OAAO,CACpBiB,eADoB,EAEpBE,kBAFoB,CAAP,CAGblB,YAHa,CAAf","sourcesContent":["import React from 'react'\nimport { vote } from '../reducers/anecdoteReducer'\nimport { setMessage } from '../reducers/notificationReducer'\nimport { connect } from 'react-redux'\n// import Filter from './Filter'\n\nconst AnecdoteList = (props) => {    \n  console.log(props.anecdotes)\n  const filtered = \n  props.anecdotes.filter(a => a.content.includes(props.filter))\n  \n  const addVote = (id, content) => {\n      props.vote(id)\n      props.setMessage(`You voted '${content}'`)\n      setTimeout( ()=> props.setMessage(''), 5000)\n    } \n    return (\n      <>\n      {filtered.map(anecdote =>\n        <div key={anecdote.id}>\n          <div>\n            {anecdote.content}\n          </div>\n          <div>\n            has {anecdote.votes} vote\n            <button onClick={() => addVote(anecdote.id, anecdote.content)}>vote</button>\n          </div>\n        </div>\n      )}\n      </>\n    )\n  }\n\n// const filterAnec = ({ anecdotes, filter }) => {\n//   return anecdotes.filter(a=> a.content.toUpperCase().includes(filter.toUpperCase()))\n// }\n\nconst mapStateToProps = (state) => {\n  return {\n    filter: state.filter,\n    anecdotes: state.anecdotes\n    // filteredAnecdotes: filterAnec(state)\n  }\n}\n\nconst mapDispatchToProps = {\n  setMessage, \n  vote\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AnecdoteList)"]},"metadata":{},"sourceType":"module"}