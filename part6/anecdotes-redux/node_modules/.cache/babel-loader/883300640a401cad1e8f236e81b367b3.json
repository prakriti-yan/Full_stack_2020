{"ast":null,"code":"import _objectSpread from \"/Users/bonnieyan/Desktop/Full_stack_2020/part6/anecdotes-redux/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport anecdoteService from '../services/anecdotes';\nexport const vote = id => {\n  return {\n    type: 'VOTE',\n    data: id\n  };\n};\nexport const add = content => {\n  // return {\n  //   type: 'ADD',\n  //   data,\n  // }\n  return async dispatch => {\n    const data = await anecdoteService.createNew(content);\n    dispatch({\n      type: 'ADD',\n      data\n    });\n  };\n};\nexport const initAnecdotes = () => {\n  return async dispatch => {\n    const anecdotes = await anecdoteService.getAll();\n    dispatch({\n      type: 'INIT_ANECDOTES',\n      data: anecdotes\n    });\n  };\n};\n\nconst anecReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'VOTE':\n      const anecdote = state.find(a => a.id === action.data);\n      console.log(action);\n\n      const updatedAne = _objectSpread({}, anecdote, {\n        votes: anecdote.votes + 1\n      });\n\n      const updatedState = state.map(e => e.id !== action.data ? e : updatedAne);\n      return updatedState.sort((a, b) => b.votes - a.votes);\n\n    case 'ADD':\n      console.log(action.data);\n      state = [...state, action.data];\n      return state;\n\n    case 'INIT_ANECDOTES':\n      console.log('hello');\n      return state = action.data;\n\n    default:\n      return state;\n  }\n};\n\nexport default anecReducer;","map":{"version":3,"sources":["/Users/bonnieyan/Desktop/Full_stack_2020/part6/anecdotes-redux/src/reducers/anecdoteReducer.js"],"names":["anecdoteService","vote","id","type","data","add","content","dispatch","createNew","initAnecdotes","anecdotes","getAll","anecReducer","state","action","anecdote","find","a","console","log","updatedAne","votes","updatedState","map","e","sort","b"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,uBAA5B;AAEA,OAAO,MAAMC,IAAI,GAAGC,EAAE,IAAI;AACxB,SAAO;AACLC,IAAAA,IAAI,EAAE,MADD;AAELC,IAAAA,IAAI,EAAEF;AAFD,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,GAAG,GAAIC,OAAD,IAAa;AAC9B;AACA;AACA;AACA;AACA,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMH,IAAI,GAAG,MAAMJ,eAAe,CAACQ,SAAhB,CAA0BF,OAA1B,CAAnB;AACAC,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE,KADC;AAEPC,MAAAA;AAFO,KAAD,CAAR;AAID,GAND;AAOD,CAZM;AAcP,OAAO,MAAMK,aAAa,GAAG,MAAM;AACjC,SAAO,MAAMF,QAAN,IAAkB;AACvB,UAAMG,SAAS,GAAG,MAAMV,eAAe,CAACW,MAAhB,EAAxB;AACAJ,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE,gBADC;AAEPC,MAAAA,IAAI,EAAEM;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CARM;;AAUP,MAAME,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC1C,UAAOA,MAAM,CAACX,IAAd;AACA,SAAK,MAAL;AACE,YAAMY,QAAQ,GAAGF,KAAK,CAACG,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACf,EAAF,KAASY,MAAM,CAACV,IAAhC,CAAjB;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;;AACA,YAAMM,UAAU,qBAAOL,QAAP;AAAiBM,QAAAA,KAAK,EAAEN,QAAQ,CAACM,KAAT,GAAiB;AAAzC,QAAhB;;AACA,YAAMC,YAAY,GAAGT,KAAK,CAACU,GAAN,CAAUC,CAAC,IAAIA,CAAC,CAACtB,EAAF,KAASY,MAAM,CAACV,IAAhB,GAAuBoB,CAAvB,GAA2BJ,UAA1C,CAArB;AACA,aAAOE,YAAY,CAACG,IAAb,CAAkB,CAACR,CAAD,EAAIS,CAAJ,KAAUA,CAAC,CAACL,KAAF,GAAUJ,CAAC,CAACI,KAAxC,CAAP;;AACF,SAAK,KAAL;AACEH,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACV,IAAnB;AACAS,MAAAA,KAAK,GAAG,CAAC,GAAGA,KAAJ,EAAWC,MAAM,CAACV,IAAlB,CAAR;AACA,aAAOS,KAAP;;AACF,SAAK,gBAAL;AACEK,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,aAAON,KAAK,GAAEC,MAAM,CAACV,IAArB;;AACF;AACE,aAAOS,KAAP;AAfF;AAkBD,CAnBD;;AAqBA,eAAeD,WAAf","sourcesContent":["import anecdoteService from '../services/anecdotes'\n\nexport const vote = id => {\n  return {\n    type: 'VOTE',\n    data: id\n  }\n}\n\nexport const add = (content) => {\n  // return {\n  //   type: 'ADD',\n  //   data,\n  // }\n  return async dispatch => {\n    const data = await anecdoteService.createNew(content)\n    dispatch({\n      type: 'ADD',\n      data,\n    })\n  }\n}\n\nexport const initAnecdotes = () => {\n  return async dispatch => {\n    const anecdotes = await anecdoteService.getAll()\n    dispatch({\n      type: 'INIT_ANECDOTES',\n      data: anecdotes\n    })\n  }\n}\n\nconst anecReducer = (state = [], action) => {\n  switch(action.type){\n  case 'VOTE':\n    const anecdote = state.find(a => a.id === action.data)\n    console.log(action)\n    const updatedAne = {...anecdote, votes: anecdote.votes + 1}\n    const updatedState = state.map(e => e.id !== action.data ? e : updatedAne)\n    return updatedState.sort((a, b) => b.votes - a.votes)\n  case 'ADD':\n    console.log(action.data)\n    state = [...state, action.data]\n    return state\n  case 'INIT_ANECDOTES':\n    console.log('hello')\n    return state= action.data\n  default:\n    return state\n  }\n  \n}\n\nexport default anecReducer"]},"metadata":{},"sourceType":"module"}